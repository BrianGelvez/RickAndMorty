{"ast":null,"code":"import axios from 'axios';\nexport const addFav = character => {\n  const endpoint = 'http://localhost:3001/rickandmorty/fav';\n  return dispatch => {\n    axios.post(endpoint, character).then(_ref => {\n      let {\n        data\n      } = _ref;\n      const uniqueData = data.filter((item, index, self) => index === self.findIndex(t => t.id === item.id && t.name === item.name));\n      console.log('Data to add:', uniqueData);\n      return dispatch({\n        type: 'ADD_FAV',\n        payload: uniqueData\n      });\n    });\n  };\n};\nexport const removeFav = id => {\n  const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n  return dispatch => {\n    axios.delete(endpoint).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return dispatch({\n        type: 'REMOVE_FAV',\n        payload: data\n      });\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: \"FILTER\",\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: \"ORDER\",\n    payload: order\n  };\n};","map":{"version":3,"names":["axios","addFav","character","endpoint","dispatch","post","then","_ref","data","uniqueData","filter","item","index","self","findIndex","t","id","name","console","log","type","payload","removeFav","delete","_ref2","filterCards","gender","orderCards","order"],"sources":["C:/Users/Usuario/Desktop/rickandmorty/Front-End/src/redux/actions.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const addFav = (character) => {\r\n   const endpoint = 'http://localhost:3001/rickandmorty/fav';\r\n   return (dispatch) => {\r\n      axios.post(endpoint, character).then(({ data }) => {\r\n         const uniqueData = data.filter((item, index, self) =>\r\n            index === self.findIndex((t) => (\r\n               t.id === item.id && t.name === item.name\r\n            ))\r\n         );\r\n\r\n         console.log('Data to add:', uniqueData);\r\n\r\n         return dispatch({\r\n            type: 'ADD_FAV',\r\n            payload: uniqueData,\r\n         });\r\n      });\r\n   };\r\n};\r\n\r\n\r\nexport const removeFav = (id) => {\r\n   const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\r\n   return (dispatch) => {\r\n      axios.delete(endpoint).then(({ data }) => {\r\n         return dispatch({\r\n            type: 'REMOVE_FAV',\r\n            payload: data,\r\n      });\r\n      });\r\n   };\r\n};\r\n\r\nexport const filterCards = (gender) => {\r\n    return {type: \"FILTER\", payload: gender}\r\n};\r\n\r\nexport const orderCards = (order) => {\r\n    return {type: \"ORDER\", payload: order}\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EAClC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAQC,QAAQ,IAAK;IAClBJ,KAAK,CAACK,IAAI,CAACF,QAAQ,EAAED,SAAS,CAAC,CAACI,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAC3C,MAAME,UAAU,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,KAC9CD,KAAK,KAAKC,IAAI,CAACC,SAAS,CAAEC,CAAC,IACxBA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,IAAID,CAAC,CAACE,IAAI,KAAKN,IAAI,CAACM,IACtC,CACJ,CAAC;MAEDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEV,UAAU,CAAC;MAEvC,OAAOL,QAAQ,CAAC;QACbgB,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEZ;MACZ,CAAC,CAAC;IACL,CAAC,CAAC;EACL,CAAC;AACJ,CAAC;AAGD,OAAO,MAAMa,SAAS,GAAIN,EAAE,IAAK;EAC9B,MAAMb,QAAQ,GAAG,yCAAyC,GAAGa,EAAE;EAC/D,OAAQZ,QAAQ,IAAK;IAClBJ,KAAK,CAACuB,MAAM,CAACpB,QAAQ,CAAC,CAACG,IAAI,CAACkB,KAAA,IAAc;MAAA,IAAb;QAAEhB;MAAK,CAAC,GAAAgB,KAAA;MAClC,OAAOpB,QAAQ,CAAC;QACbgB,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEb;MACf,CAAC,CAAC;IACF,CAAC,CAAC;EACL,CAAC;AACJ,CAAC;AAED,OAAO,MAAMiB,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAO;IAACN,IAAI,EAAE,QAAQ;IAAEC,OAAO,EAAEK;EAAM,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO;IAACR,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAEO;EAAK,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}